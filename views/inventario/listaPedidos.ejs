<%- include('../parciales/encabezado', { rutaActual: '/pedidos', usuario: usuario }) %>

<div class="container">
    <!-- Controles de ventana -->
    <div class="window-controls">
        <button class="window-btn window-minimize" title="Minimizar"><i class="fas fa-window-minimize"></i></button>
        <button class="window-btn window-close" title="Cerrar"><i class="fas fa-times"></i></button>
    </div>
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="titulo-formulario"><i class="fas fa-file-invoice"></i> Pedidos</h2>
        <div>
            <a href="/inventario/nuevo-pedido" class="btn btn-primary me-2"><i class="fas fa-plus"></i> Nuevo Pedido</a>
            <button class="btn btn-secondary me-2" id="editarPedidoBtn" disabled><i class="fas fa-edit"></i> Editar Pedido</button>
            <button class="btn btn-danger" id="eliminarPedidoBtn" disabled><i class="fas fa-trash"></i> Eliminar Pedido</button>
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-hover" id="tablaPedidos">
            <thead>
                <tr>
                    <th>Código de Factura</th>
                    <th>Proveedor</th>
                    <th>Fecha</th>
                    <th>Total Factura (LPS)</th>
                </tr>
            </thead>
            <tbody>
                <% pedidos.forEach(pedido => { %>
                    <tr data-id="<%= pedido._id %>">
                        <td><%= pedido.numeroFactura %></td>
                        <td><%= pedido.proveedor %></td>
                        <td><%= pedido.fecha.toISOString().split('T')[0] %></td>
                        <td>LPS <%= pedido.totalFactura.toFixed(2) %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
</div>

<%- include('../parciales/pie') %>

<script>
    // Selección de fila y habilitar botones
    const tabla = document.getElementById('tablaPedidos');
    let selectedRow = null;
    let selectedId = null;
    tabla.addEventListener('click', function(e) {
        let tr = e.target.closest('tr');
        if (!tr) return;
        if (selectedRow) selectedRow.classList.remove('table-active');
        selectedRow = tr;
        selectedRow.classList.add('table-active');
        selectedId = tr.getAttribute('data-id');
        document.getElementById('editarPedidoBtn').disabled = false;
        document.getElementById('eliminarPedidoBtn').disabled = false;
    });

    document.getElementById('editarPedidoBtn').onclick = function() {
        if (selectedId) window.location = '/inventario/pedidos/' + selectedId + '/editar';
    };
    document.getElementById('eliminarPedidoBtn').onclick = function() {
        if (selectedId && confirm('¿Eliminar este pedido?')) {
            fetch('/inventario/pedidos/' + selectedId, { method: 'DELETE' })
                .then(() => window.location.reload());
        }
    };
    
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const minimizedBar = document.getElementById('minimized-windows-bar');
    let windowStack = [];

    document.querySelectorAll('.window-controls').forEach(function(ctrls) {
        const container = ctrls.closest('.container, .container-formulario-producto');
        const minimize = ctrls.querySelector('.window-minimize');
        const maximize = ctrls.querySelector('.window-maximize');
        const close = ctrls.querySelector('.window-close');
        let maximized = false;

        // Guardar en stack al abrir
        windowStack.push(container);

        if (minimize) {
            minimize.onclick = () => {
                container.classList.add('window-minimized');
                // Crear botón en la barra de minimizados
                let btn = document.createElement('button');
                btn.className = 'window-btn window-restore';
                btn.innerHTML = '<i class="fas fa-window-restore"></i> ' + (container.querySelector('.titulo-formulario')?.textContent || 'Ventana');
                btn.onclick = () => {
                    container.classList.remove('window-minimized');
                    btn.remove();
                };
                minimizedBar.appendChild(btn);

                // Mostrar el módulo anterior si existe
                if (windowStack.length > 1) {
                    let prev = windowStack[windowStack.length - 2];
                    prev.classList.remove('window-minimized');
                }
            };
        }
        if (maximize) {
            maximize.onclick = () => {
                maximized = !maximized;
                container.classList.toggle('window-maximized', maximized);
            };
        }
        if (close) {
            close.onclick = () => {
                container.style.display = 'none';
                // Mostrar el módulo anterior si existe
                windowStack.pop();
                if (windowStack.length > 0) {
                    let prev = windowStack[windowStack.length - 1];
                    prev.classList.remove('window-minimized');
                    prev.style.display = '';
                }
            };
        }
    });
});
</script>
