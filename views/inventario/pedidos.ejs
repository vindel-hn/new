<%- include('../parciales/encabezado', { rutaActual: '/inventario', usuario: usuario }) %>

<div class="container-formulario-producto">
    <!-- Controles de ventana -->
    <div class="window-controls">
        <button class="window-btn window-minimize" title="Minimizar"><i class="fas fa-window-minimize"></i></button>
        <button class="window-btn window-close" title="Cerrar"><i class="fas fa-times"></i></button>
    </div>
    <h2 class="titulo-formulario"><i class="fas fa-file-invoice"></i> Pedidos</h2>
    <% if (typeof error !== 'undefined' && error) { %>
        <div class="alert alert-danger"><%= error %></div>
    <% } %>
    <form method="POST" action="/inventario/pedidos" class="formulario-producto">
        <div class="grupo-campos">
            <div class="campo-formulario">
                <label for="numeroFactura"><i class="fas fa-receipt"></i> Número de Factura *</label>
                <input type="text" id="numeroFactura" name="numeroFactura" required class="form-control" value="<%= typeof numeroFactura !== 'undefined' ? numeroFactura : '' %>">
            </div>
            <div class="campo-formulario">
                <label for="proveedor"><i class="fas fa-truck"></i> Proveedor *</label>
                <input type="text" id="proveedor" name="proveedor" required class="form-control" value="<%= typeof proveedor !== 'undefined' ? proveedor : '' %>">
            </div>
            <div class="campo-formulario">
                <label for="fecha"><i class="fas fa-calendar"></i> Fecha *</label>
                <input type="date" id="fecha" name="fecha" required class="form-control" value="<%= typeof fecha !== 'undefined' ? fecha : (fechaActual || '') %>">
            </div>
        </div>
        <div class="grupo-campos">
            <div class="campo-formulario">
                <label for="subTotal"><i class="fas fa-money-bill"></i> Sub Total (LPS) *</label>
                <input type="number" id="subTotal" name="subTotal" min="0" step="0.01" required class="form-control" value="<%= typeof subTotal !== 'undefined' ? subTotal : '' %>">
            </div>
            <div class="campo-formulario">
                <label for="isv"><i class="fas fa-percentage"></i> ISV *</label>
                <select id="isv" name="isv" required class="form-control">
                    <option value="">Seleccione...</option>
                    <option value="Exento" <%= isv === 'Exento' ? 'selected' : '' %>>Exento</option>
                    <option value="12%" <%= isv === '12%' ? 'selected' : '' %>>12%</option>
                    <option value="15%" <%= isv === '15%' ? 'selected' : '' %>>15%</option>
                    <option value="18%" <%= isv === '18%' ? 'selected' : '' %>>18%</option>
                </select>
            </div>
            <div class="campo-formulario">
                <label for="totalFactura"><i class="fas fa-cash-register"></i> Total de Factura (LPS) *</label>
                <input type="number" id="totalFactura" name="totalFactura" min="0" step="0.01" required class="form-control" value="<%= typeof totalFactura !== 'undefined' ? totalFactura : '' %>">
            </div>
        </div>

        <!-- Tabla de productos del pedido -->
        <!-- Productos del Pedido -->
         
<div class="mt-4">
   
    </form>
 <h5>Agregar al Pedido</h5>
 
    <form id="agregarProductoPedido" class="d-flex flex-wrap gap-2 mb-3" onsubmit="return agregarProductoAlPedido();">
         <label for="totalFactura"><i class="fas fa-barcode"></i> Código del Producto *</label>
        <input type="text" id="codigoProducto" name="codigoProducto" placeholder="Código de producto" class="form-control" required style="max-width:160px;">
         <label for="totalFactura"><i class="fas fa-cubes"></i> Cantidad *</label>
        <input type="number" id="cantidadProducto" name="cantidadProducto" placeholder="Cantidad" class="form-control" min="1" required style="max-width:120px;">
         <label for="totalFactura"><i class="fas fa-money-bill"></i> Costo Unitario *</label>
        <input type="number" id="costoUnitario" name="costoUnitario" placeholder="Costo unitario" class="form-control" min="0" step="0.01" required style="max-width:140px;">
        <button type="submit" class="btn btn-primary">Agregar Producto</button>
        <button type="button" class="btn btn-secondary" onclick="mostrarCrearProducto()">Crear Producto</button>
    </form>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Nombre</th>
                    <th>Cantidad</th>
                    <th>Costo Unitario</th>
                    <th>Subtotal</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="tablaProductosPedido">
                <!-- Aquí se agregan los productos dinámicamente con JS -->
            </tbody>
        </table>
                <div class="mt-3" id="resumenTotalesPedido">
                    <div><strong>Subtotal productos:</strong> LPS <span id="subtotalProductos">0.00</span></div>
                            <div><strong>Total productos:</strong> LPS <span id="totalProductos">0.00</span></div>
                    <div id="diferenciaTotal" style="color:#e74c3c; font-weight:bold;"></div>
                </div>


    </div>
    <div class="mt-2">
        <span id="diferenciaTotal" style="color:#e74c3c; font-weight:bold;"></span>
    </div>
</div>

        <div class="acciones-formulario mt-4">
            <button type="submit" class="btn btn-guardar">Guardar Pedido</button>
            <a href="/inventario" class="btn btn-cancelar">Cancelar</a>
        </div>
    

</div>

<!-- Modal para crear producto nuevo -->
<div id="modalCrearProducto" style="display:none;">
    <iframe src="/inventario/nuevo" style="width:100%;height:600px;border:none;"></iframe>
    <button onclick="cerrarCrearProducto()" class="btn btn-cancelar mt-2">Cerrar</button>
</div>
<script>


let productosPedido = [];

async function buscarProductoPorCodigo(codigo) {
    const res = await fetch('/inventario/api/productos?codigo=' + encodeURIComponent(codigo));
    const productos = await res.json();
    return productos.find(p => p.codigo === codigo);
}

function limpiarCamposProducto() {
    document.getElementById('codigoProducto').value = '';
    document.getElementById('cantidadProducto').value = '';
    document.getElementById('costoUnitario').value = '';
    document.getElementById('codigoProducto').focus();
}

function renderTablaProductos() {
    const tbody = document.getElementById('tablaProductosPedido');
    tbody.innerHTML = '';
    let subtotal = 0;
    productosPedido.forEach((prod, idx) => {
        const sub = prod.cantidad * prod.costoUnitario;
        subtotal += sub;
        tbody.innerHTML += `
            <tr>
                <td>${prod.codigo}</td>
                <td>${prod.nombre}</td>
                <td>${prod.cantidad}</td>
                <td>LPS ${prod.costoUnitario.toFixed(2)}</td>
                <td>LPS ${sub.toFixed(2)}</td>
                <td>
                    <button type="button" class="btn btn-danger btn-sm" onclick="eliminarProductoPedido(${idx})"><i class="fas fa-trash"></i></button>
                </td>
            </tr>
        `;
    });

    document.getElementById('subtotalProductos').textContent = subtotal.toFixed(2);
    document.getElementById('totalProductos').textContent = subtotal.toFixed(2);

    const totalFactura = parseFloat(document.getElementById('totalFactura').value) || 0;
    const diferencia = totalFactura - subtotal;
    const diffElem = document.getElementById('diferenciaTotal');
    if (Math.abs(diferencia) > 0.01) {
        diffElem.textContent = `Diferencia con Total de Factura: LPS ${diferencia.toFixed(2)}`;
    } else {
        diffElem.textContent = '';
    }
}

function eliminarProductoPedido(idx) {
    productosPedido.splice(idx, 1);
    renderTablaProductos();
}

async function agregarProductoAlPedido() {
    const codigo = document.getElementById('codigoProducto').value.trim();
    const cantidad = parseFloat(document.getElementById('cantidadProducto').value);
    const costoUnitario = parseFloat(document.getElementById('costoUnitario').value);

    if (!codigo) return false;

    const producto = await buscarProductoPorCodigo(codigo);

    if (!producto) {
        if (confirm('El producto con código "' + codigo + '" no existe. ¿Desea crearlo?')) {
            mostrarCrearProducto();
        }
        return false;
    }

    productosPedido.push({
        codigo: producto.codigo,
        nombre: producto.nombre,
        cantidad,
        costoUnitario
    });

    renderTablaProductos();
    limpiarCamposProducto();
    return false; // Evita submit real
}

// Al guardar el pedido, agrega los productos al formulario antes de enviar
document.querySelector('form.formulario-producto').onsubmit = function(e) {
    productosPedido.forEach((prod, idx) => {
        ['codigo', 'nombre', 'cantidad', 'costoUnitario'].forEach(key => {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = `productos[${idx}][${key}]`;
            input.value = prod[key];
            this.appendChild(input);
        });
    });
    // Aquí sí se envía el formulario y se cierra el módulo
};
</script>
<script>
document.getElementById('codigoProducto').addEventListener('blur', async function() {
    const codigo = this.value.trim();
    if (!codigo) return;
    const producto = await buscarProductoPorCodigo(codigo);
    if (producto) {
        // Autocompleta el costo unitario si existe
        document.getElementById('costoUnitario').value = producto.costoUnitario || producto.costo || '';
    }
});
</script>

<%- include('../parciales/pie') %>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const minimizedBar = document.getElementById('minimized-windows-bar');
    let windowStack = [];

    document.querySelectorAll('.window-controls').forEach(function(ctrls) {
        const container = ctrls.closest('.container, .container-formulario-producto');
        const minimize = ctrls.querySelector('.window-minimize');
        const maximize = ctrls.querySelector('.window-maximize');
        const close = ctrls.querySelector('.window-close');
        let maximized = false;

        // Guardar en stack al abrir
        windowStack.push(container);

        if (minimize) {
            minimize.onclick = () => {
                container.classList.add('window-minimized');
                // Crear botón en la barra de minimizados
                let btn = document.createElement('button');
                btn.className = 'window-btn window-restore';
                btn.innerHTML = '<i class="fas fa-window-restore"></i> ' + (container.querySelector('.titulo-formulario')?.textContent || 'Ventana');
                btn.onclick = () => {
                    container.classList.remove('window-minimized');
                    btn.remove();
                };
                minimizedBar.appendChild(btn);

                // Mostrar el módulo anterior si existe
                if (windowStack.length > 1) {
                    let prev = windowStack[windowStack.length - 2];
                    prev.classList.remove('window-minimized');
                }
            };
        }
        if (maximize) {
            maximize.onclick = () => {
                maximized = !maximized;
                container.classList.toggle('window-maximized', maximized);
            };
        }
        if (close) {
            close.onclick = () => {
                container.style.display = 'none';
                // Mostrar el módulo anterior si existe
                windowStack.pop();
                if (windowStack.length > 0) {
                    let prev = windowStack[windowStack.length - 1];
                    prev.classList.remove('window-minimized');
                    prev.style.display = '';
                }
            };
        }
    });
});
</script>